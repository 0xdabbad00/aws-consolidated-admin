---
AWSTemplateFormatVersion: "2010-09-09"
Description: Baseline security configuration
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: External security principals
        Parameters:
          - SecurityAuditorPrincipalARNs
          - AdministratorPrincipalARNs
          - PowerUserPrincipalARNs
          - ReadOnlyPrincipalARNs
          - BillingPrincipalARNs
          - EvidentIOARNs
          - GitLambsARNs
      -
        Label:
          default: S3 access log retention
        Parameters:
          - S3LogLifecycleEnabled
          - S3LogDaysToGlacier
          - S3LogDaysToDelete
      -
        Label:
          default: CloudTrail log retention
        Parameters:
          - CloudTrailLogGroupRetentionDays
          - CloudTrailLifecycleEnabled
          - CloudTrailDaysToGlacier
          - CloudTrailDaysToDelete
      -
        Label:
          default: Config snapshot retention
        Parameters:
          - ConfigLifecycleEnabled
          - ConfigDaysToGlacier
          - ConfigDaysToDelete
      -
        Label:
          default: AWS Config
        Parameters:
          - ConfigDeliveryFrequency
      -
        Label:
          default: External CloudTrail Buckets
        Parameters:
          - ExternalCloudTrailBucket

Parameters:
  SecurityAuditorPrincipalARNs:
    Type: CommaDelimitedList
    Description: Comma-separated list of IAM principal ARNs allowed to assume the SecurityAuditor role.
    Default: arn:aws:iam::425632585467:root

  AdministratorPrincipalARNs:
    Type: CommaDelimitedList
    Description: Comma-separated list of IAM principal ARNs allowed to assume the Administrator role.
    Default: arn:aws:iam::425632585467:root

  PowerUserPrincipalARNs:
    Type: CommaDelimitedList
    Description: Comma-separated list of IAM principal ARNs allowed to assume the PowerUser role.
    Default: arn:aws:iam::425632585467:root

  ReadOnlyPrincipalARNs:
    Type: CommaDelimitedList
    Description: Comma-separated list of IAM principal ARNs allowed to assume the ReadOnly role.
    Default: arn:aws:iam::425632585467:root

  BillingPrincipalARNs:
    Type: CommaDelimitedList
    Description: Comma-separated list of IAM principal ARNs allowed to assume the Billing role.
    Default: arn:aws:iam::425632585467:root

  EvidentIOARNs:
    Type: CommaDelimitedList
    Description: Comma-separated list of IAM prinicpal ARNs for EvidentIO
    Default: arn:aws:iam::613698206329:root

  GitLambARNs:
    Type: CommaDelimitedList
    Description: Comma-separated list of IAM principal ARNs allowed to assume the Billing role.
    Default: arn:aws:iam::425632585467:root

  CloudTrailLogGroupRetentionDays:
    Type: Number
    Description: Number of days to retain CloudTrail logs in CloudWatch Logs
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
    Default: 365

  S3LogLifecycleEnabled:
    Type: String
    Default: Disabled
    Description: When enabled, S3 access logs will be first moved to Glacier and then delete after a period of time
    AllowedValues: ["Enabled", "Disabled"]

  S3LogDaysToGlacier:
    Type: Number
    Description: Days before S3 access logs are moved to Glacier
    Default: 365

  S3LogDaysToDelete:
    Type: Number
    Description: Days before S3 access logs are deleted
    Default: 731

  # CloudTrail lifecycle

  CloudTrailLifecycleEnabled:
    Type: String
    Default: Disabled
    Description: When enabled, CloudTrail logs will be first moved to Glacier and then deleted after a period of time
    AllowedValues: ["Enabled", "Disabled"]

  CloudTrailDaysToGlacier:
    Type: Number
    Description: Days before CloudTrail logs are moved to Glacier
    Default: 365

  CloudTrailDaysToDelete:
    Type: Number
    Description: Days before CloudTrail logs are deleted
    Default: 731

  # Config lifecycle

  ConfigLifecycleEnabled:
    Type: String
    Default: Disabled
    Description: When enabled, AWS Config snapshots will be first moved to Glacier and then deleted after a period of time
    AllowedValues: ["Enabled", "Disabled"]

  ConfigDaysToGlacier:
    Type: Number
    Description: Days before AWS Config snapshots are moved to Glacier
    Default: 365

  ConfigDaysToDelete:
    Type: Number
    Description: Days before AWS Config snapshots are deleted
    Default: 731

  # Config delivery frequency

  ConfigDeliveryFrequency:
    Type: String
    Description: Interval for Config snapshot delivery and Config Rule evaluation
    Default: One_Hour
    AllowedValues: [One_Hour, Three_Hours, Six_Hours, Twelve_Hours, TwentyFour_Hours]

  # External CloudTrail Bucket

  ExternalCloudTrailBucket:
    Type: String
    Default: workingteam-simian-cloudtrail
    Description: Bucket name for writing CloudTrail logs externally

Resources:
  #####################
  # S3 Access Logging #
  #####################

  S3LogBucket:
    Type: "AWS::S3::Bucket"
    DependsOn: S3SNSTopicPolicy
    Properties:
      BucketName: !Join ['', ['s3-', !Ref 'AWS::AccountId']]
      AccessControl: LogDeliveryWrite
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: S3LogLifecycle
            ExpirationInDays: !Ref S3LogDaysToDelete
            Status: !Ref S3LogLifecycleEnabled
            Transitions:
              - StorageClass: GLACIER
                TransitionInDays: !Ref S3LogDaysToGlacier
      LoggingConfiguration:
        DestinationBucketName: !Join ['', ['s3-', !Ref 'AWS::AccountId']]
        LogFilePrefix: !Join ['', ['s3-', !Ref 'AWS::AccountId', '/']]
      NotificationConfiguration:
        TopicConfigurations:
          - Event: "s3:ObjectCreated:*"
            Topic: !Ref S3LogSNSTopic
      Tags:
        - { Key: Environment, Value: security }

  S3LogSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: S3LogDelivered

  S3SNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: S3SecurityAuditTopic
        Version: "2012-10-17"
        Statement:
          -
            Sid: AllowS3Publish
            Effect: Allow
            Principal:
              Service: "s3.amazonaws.com"
            Action: sns:Publish
            Resource: "*"
            Condition:
              ArnLike:
                aws:SourceArn: !Join ['', ['arn:aws:s3:*:*:s3-', !Ref 'AWS::AccountId']]
          -
            Sid: AllowCrossAccountSubscription
            Effect: Allow
            Principal:
              AWS: !Ref SecurityAuditorPrincipalARNs
            Action: sns:Subscribe
            Resource: "*"
      Topics:
        - !Ref S3LogSNSTopic

  ##############
  # CloudTrail #
  ##############

  CloudTrailBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Join ['', ['cloudtrail-', !Ref 'AWS::AccountId']]
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: CloudTrailLifecycle
            ExpirationInDays: !Ref CloudTrailDaysToDelete
            Status: !Ref CloudTrailLifecycleEnabled
            Transitions:
              - StorageClass: GLACIER
                TransitionInDays: !Ref CloudTrailDaysToGlacier
      LoggingConfiguration:
        DestinationBucketName: !Ref S3LogBucket
        LogFilePrefix: !Join ['', ['cloudtrail-', !Ref 'AWS::AccountId', '/']]
      Tags:
        - { Key: Environment, Value: security }

  CloudTrailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CloudTrailBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action:
              - "s3:GetBucketAcl"
            Resource: !Join ['', ['arn:aws:s3:::', !Ref CloudTrailBucket]]
          -
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action:
              - "s3:PutObject"
            Resource: !Join ['', ['arn:aws:s3:::', !Ref CloudTrailBucket, '/AWSLogs/', !Ref 'AWS::AccountId', '/*']]
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control

  CloudTrail:
    Type: "AWS::CloudTrail::Trail"
    DependsOn: [CloudTrailBucketPolicy, CloudTrailSNSTopicPolicy]
    Properties:
      CloudWatchLogsLogGroupArn: !GetAtt CWLLogGroup.Arn
      CloudWatchLogsRoleArn: !GetAtt CloudTrailCWLRole.Arn
      EnableLogFileValidation: true
      IncludeGlobalServiceEvents: true
      IsLogging: true
      IsMultiRegionTrail: true
      S3BucketName: !Ref CloudTrailBucket
      SnsTopicName: !Ref CloudTrailSNSTopic
      Tags:
        - { Key: Environment, Value: security }

  ExternalCloudTrail:
    Type: "AWS::CloudTrail::Trail"
    Properties:
      EnableLogFileValidation: true
      IncludeGlobalServiceEvents: true
      IsLogging: true
      IsMultiRegionTrail: true
      S3BucketName: !Ref ExternalCloudTrailBucket
      Tags:
        - { Key: Environment, Value: security }

  # CloudTrail delivery SNS notifications

  CloudTrailSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: CloudTrailDelivered

  CloudTrailSNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: CloudTrailSecurityAuditTopic
        Version: "2012-10-17"
        Statement:
          -
            Sid: AllowCloudTrailPublish
            Effect: Allow
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Action: sns:Publish
            Resource: "*"
          -
            Sid: AllowCrossAccountSubscription
            Effect: Allow
            Principal:
              AWS: !Ref SecurityAuditorPrincipalARNs
            Action: sns:Subscribe
            Resource: "*"
      Topics:
        - !Ref CloudTrailSNSTopic

  # CloudTrail to CloudWatch Logs

  CWLLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: CloudTrailDefault
      RetentionInDays: !Ref CloudTrailLogGroupRetentionDays

  CloudTrailCWLPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: !GetAtt CWLLogGroup.Arn

  CloudTrailCWLRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      ManagedPolicyArns:
        - !Ref CloudTrailCWLPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Action:
              - "sts:AssumeRole"

  ##############
  # AWS Config #
  ##############

  # S3 configuration for AWS Config
  ConfigBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Join ['', ['config-', !Ref 'AWS::AccountId']]
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: ConfigLifecycle
            ExpirationInDays: !Ref ConfigDaysToDelete
            Status: !Ref ConfigLifecycleEnabled
            Transitions:
              - StorageClass: GLACIER
                TransitionInDays: !Ref ConfigDaysToGlacier
      LoggingConfiguration:
        DestinationBucketName: !Ref S3LogBucket
        LogFilePrefix: !Join ['', ['config-', !Ref 'AWS::AccountId', '/']]
      Tags:
        - { Key: Environment, Value: security }

  # SNS topic for configuration snapshot delivery
  ConfigSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        -
          Endpoint:
            Fn::GetAtt:
              - "ConfigSQSQueue"
              - "Arn"
          Protocol: "sqs"
      TopicName: ConfigDelivered

  ConfigSNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: SecurityAuditTopic
        Version: "2012-10-17"
        Statement:
          -
            Sid: AllowCrossAccountSubscription
            Effect: Allow
            Principal:
              AWS: !Ref SecurityAuditorPrincipalARNs
            Action: sns:Subscribe
            Resource: "*"
      Topics:
        - !Ref ConfigSNSTopic

  ConfigSQSQueue:
    Type: "AWS::SQS::Queue"

  ConfigSQSQueuePolicy:
    Type: "AWS::SQS::QueuePolicy"
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Id: SNStoSQS
        Statement:
          Sid: rule1
          Effect: Allow
          Principal: "*"
          Action: sqs:*
          Resource:
          - !GetAtt ConfigSQSQueue.Arn
          Condition:
            StringEquals:
              aws:SourceArn:
              - !Ref ConfigSNSTopic
      Queues:
        - !Ref ConfigSQSQueue

  ConfigPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Action:
              - s3:PutObject
            Resource: !Join ['', ['arn:aws:s3:::', !Ref ConfigBucket, '/*']]
            Condition:
              StringLike:
                s3:x-amz-acl: bucket-owner-full-control
          -
            Effect: Allow
            Action:
              - s3:GetBucketAcl
            Resource: !Join ['', ['arn:aws:s3:::', !Ref ConfigBucket]]
          -
            Effect: Allow
            Action:
              - sns:Publish
            Resource: !Ref ConfigSNSTopic

  ConfigRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      ManagedPolicyArns:
        - !Ref ConfigPolicy
        - arn:aws:iam::aws:policy/service-role/AWSConfigRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "config.amazonaws.com"
            Action:
              - "sts:AssumeRole"

  ConfigRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Properties:
      Name: security
      RecordingGroup:
        AllSupported: true
        IncludeGlobalResourceTypes: true
      RoleARN: !GetAtt ConfigRole.Arn

  ConfigDeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    Properties:
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: !Ref ConfigDeliveryFrequency
      Name: security
      S3BucketName: !Ref ConfigBucket
      SnsTopicARN: !Ref ConfigSNSTopic

  #####################################################
  # Splunk IAM User and Group for Config and FlowLogs #
  #####################################################

  SplunkReadOnly:
    Type: AWS::IAM::Group
    Properties:
      GroupName: SplunkReadOnly
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSConfigUserAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsReadOnlyAccess
        - !Ref SplunkPolicy

  SplunkPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - sqs:GetQueueAttributes
          - sqs:ListQueues
          - sqs:ReceiveMessage
          - sqs:GetQueueUrl
          - sqs:SendMessage
          - sqs:DeleteMessage
          - s3:ListBucket
          - s3:GetObject
          - s3:GetBucketLocation
          - s3:ListAllMyBuckets
          - config:DeliverConfigSnapshot
          - config:DescribeConfigRules
          - config:DescribeConfigRuleEvaluationStatus
          - config:GetComplianceDetailsByConfigRule
          - config:GetComplianceSummaryByConfigRule
          - iam:GetUser
          - autoscaling:Describe*
          - cloudwatch:Describe*
          - cloudwatch:Get*
          - cloudwatch:List*
          - sns:Get*
          - sns:List*
          - sns:Publish
          - logs:DescribeLogGroups
          - logs:DescribeLogStreams
          - logs:GetLogEvents
          - ec2:DescribeInstances
          - ec2:DescribeReservedInstances
          - ec2:DescribeSnapshots
          - ec2:DescribeRegions
          - ec2:DescribeKeyPairs
          - ec2:DescribeNetworkAcls
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVolumes
          - ec2:DescribeVpcs
          - ec2:DescribeImages
          - ec2:DescribeAddresses
          - lambda:List
          - rds:DescribeDBInstances
          - cloudfront:ListDistributions
          - elasticloadbalancing:DescribeLoadBalancers
          - inspector:Describe*
          - inspector:List*
          - kinesis:Get*
          - kinesis:DescribeStream
          - kinesis:ListStreams
          Resource:
          - "*"


  SplunkRO:
    Type: "AWS::IAM::User"
    Properties:
      Groups:
        - !Ref SplunkReadOnly
      UserName: SplunkRO

  #############################
  # Miscellaneous IAM objects #
  #############################

  LogBucketROPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Path: /
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "s3:Get*"
              - "s3:List*"
            Resource:
              - !Join ['', ['arn:aws:s3:::', !Ref CloudTrailBucket, '/*']]
              - !Join ['', ['arn:aws:s3:::', !Ref CloudTrailBucket]]
              - !Join ['', ['arn:aws:s3:::', !Ref S3LogBucket, '/*']]
              - !Join ['', ['arn:aws:s3:::', !Ref S3LogBucket]]
              - !Join ['', ['arn:aws:s3:::', !Ref ConfigBucket, '/*']]
              - !Join ['', ['arn:aws:s3:::', !Ref ConfigBucket]]

  SecurityAuditorRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: SecurityAuditor
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/SecurityAudit
        - !Ref LogBucketROPolicy
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !Ref SecurityAuditorPrincipalARNs
            Action:
              - "sts:AssumeRole"

  EvidentIORole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EvidentIO
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/SecurityAudit
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !Ref EvidentIOARNs
            Action:
              - "sts:AssumeRole"

  AdministratorRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: Administrator
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !Ref AdministratorPrincipalARNs
            Action:
              - "sts:AssumeRole"

  PowerUserRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: PowerUser
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/PowerUserAccess
        - arn:aws:iam::aws:policy/IAMReadOnlyAccess
        - !Ref CodePipelinePassRolePolicy

      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              AWS: !Ref PowerUserPrincipalARNs
            Action:
              - "sts:AssumeRole"

  ReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ReadOnly
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              AWS: !Ref ReadOnlyPrincipalARNs
            Action:
              - "sts:AssumeRole"

  BillingAdministratorPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "aws-portal:View*"
            Resource: "*"
          - Effect: Deny
            Action:
              - "aws-portal:*Account"
            Resource: "*"

  BillingRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: Billing
      Path: "/"
      ManagedPolicyArns:
        - !Ref BillingAdministratorPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              AWS: !Ref BillingPrincipalARNs
            Action:
              - "sts:AssumeRole"

  GitLambPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "iam:GetRole"
              - "iam:GetRolePolicy"
              - "iam:PutRolePolicy"
              - "iam:CreateRole"
              - "iam:ListRoles"
              - "iam:UpdateAssumeRolePolicy"
              - "iam:PassRole"
              - "lambda:*"
            Resource: "*"

  CodePipelinePassRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "iam:PassRole"
            Resource:
              - !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':role/AWS-CodePipeline-Service']]
              - !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':role/codepipeline-cloudformation']]

  GitLambRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: gitlamb
      Path: "/"
      ManagedPolicyArns:
        - !Ref GitLambPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              AWS: !Ref GitLambARNs
            Action:
              - "sts:AssumeRole"

Outputs:
  CloudTrailDeliveryTopic:
    Description: SNS topic ARN for CloudTrail log delivery
    Value: !Ref CloudTrailSNSTopic

  S3LogDeliveryTopic:
    Description: SNS topic ARN for S3 access log delivery
    Value: !Ref S3LogSNSTopic

  ConfigDeliveryTopic:
    Description: SNS topic ARN for configuration snapshot delivery
    Value: !Ref ConfigSNSTopic

  ConfigSQSQueueARN:
    Description: SQS Queue ARN for configuration snapshot delivery
    Value: !GetAtt ConfigSQSQueue.Arn

  LogGroupArn:
    Description: ARN of the CloudWatch Logs Log Group
    Value: !GetAtt CWLLogGroup.Arn

  SecurityAuditorRoleARN:
    Description: SecurityAuditor role ARN
    Value: !GetAtt SecurityAuditorRole.Arn

  AdministratorRoleARN:
    Description: Administrator role ARN
    Value: !GetAtt AdministratorRole.Arn

  PowerUserRoleARN:
    Description: PowerUser role ARN
    Value: !GetAtt PowerUserRole.Arn

  ReadOnlyRoleARN:
    Description: ReadOnly role ARN
    Value: !GetAtt ReadOnlyRole.Arn

  BillingRoleARN:
    Description: Billing role ARN
    Value: !GetAtt BillingRole.Arn

  EvidentIORoleARN:
    Description: EvidentIO role ARN
    Value: !GetAtt EvidentIORole.Arn

  GitLambRoleARN:
    Description: GitLamb role ARN
    Value: !GetAtt GitLambRole.Arn
