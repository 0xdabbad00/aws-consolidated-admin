---
AWSTemplateFormatVersion: "2010-09-09"
Description: Security Account Resources

Resources:
  CredentialSelfServicePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Sid: AllowAllUsersToListAccounts
            Effect: Allow
            Action:
              - iam:ListAccountAliases
              - iam:ListUsers
              - iam:GetAccountSummary
            Resource: "*"
          -
            Sid: AllowIndividualUserToSeeAndManageTheirOwnAccountInformation
            Effect: Allow
            Action:
              - iam:ChangePassword
              - iam:CreateAccessKey
              - iam:CreateLoginProfile
              - iam:DeleteAccessKey
              - iam:DeleteLoginProfile
              - iam:GetAccountPasswordPolicy
              - iam:GetLoginProfile
              - iam:ListAccessKeys
              - iam:UpdateAccessKey
              - iam:UpdateLoginProfile
            Resource: !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':user/${aws:username}']]
          -
            Sid: AllowIndividualUserToListTheirOwnMFA
            Effect: Allow
            Action:
              - iam:ListVirtualMFADevices
              - iam:ListMFADevices
            Resource:
              - !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':mfa/*']]
              - !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':user/${aws:username}']]
          -
            Sid: AllowIndividualUserToManageTheirOwnMFA
            Effect: Allow
            Action:
              - iam:CreateVirtualMFADevice
              - iam:DeactivateMFADevice
              - iam:DeleteVirtualMFADevice
              - iam:RequestSmsMfaRegistration
              - iam:FinalizeSmsMfaRegistration
              - iam:EnableMFADevice
              - iam:ResyncMFADevice
            Resource:
              - !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':mfa/${aws:username}']]
              - !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':user/${aws:username}']]
          -
            Sid: BlockAnyAccessOtherThanAboveUnlessSignedInWithMFA
            Effect: Deny
            NotAction: iam:*
            Resource: "*"
            Condition:
              BoolIfExists:
                aws:MultiFactorAuthPresent: false

  AssumeAdministratorRoleWithMFAPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Resource: "arn:aws:iam::*:role/Administrator"
            Action:
              - "sts:AssumeRole"
            Condition:
              Bool:
                aws:MultiFactorAuthPresent: true

  AssumeSecurityAuditorRoleWithMFAPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Resource: "arn:aws:iam::*:role/SecurityAuditor"
            Action:
              - "sts:AssumeRole"
            Condition:
              Bool:
                aws:MultiFactorAuthPresent: true

  AssumePowerUserRoleWithMFAPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Resource: "arn:aws:iam::*:role/PowerUser"
            Action:
              - "sts:AssumeRole"
            Condition:
              Bool:
                aws:MultiFactorAuthPresent: true

  AssumeReadOnlyRoleWithMFAPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Resource: "arn:aws:iam::*:role/ReadOnly"
            Action:
              - "sts:AssumeRole"
            Condition:
              Bool:
                aws:MultiFactorAuthPresent: true

  AssumeBillingRoleWithMFAPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Resource: "arn:aws:iam::*:role/Billing"
            Action:
              - "sts:AssumeRole"
            Condition:
              Bool:
                aws:MultiFactorAuthPresent: true

  Administrators:
    Type: AWS::IAM::Group
    Properties:
      GroupName: SecurityAdministrators
      ManagedPolicyArns:
        - !Ref AssumeAdministratorRoleWithMFAPolicy
        - arn:aws:iam::aws:policy/AdministratorAccess

  SecurityAuditors:
    Type: AWS::IAM::Group
    Properties:
      GroupName: SecurityAuditors
      ManagedPolicyArns:
        - !Ref AssumeSecurityAuditorRoleWithMFAPolicy

  PowerUsers:
    Type: AWS::IAM::Group
    Properties:
      GroupName: PowerUsers
      ManagedPolicyArns:
        - !Ref AssumePowerUserRoleWithMFAPolicy

  ReadOnly:
    Type: AWS::IAM::Group
    Properties:
      GroupName: ReadOnly
      ManagedPolicyArns:
        - !Ref AssumeReadOnlyRoleWithMFAPolicy

  Billing:
    Type: AWS::IAM::Group
    Properties:
      GroupName: Billing
      ManagedPolicyArns:
        - !Ref AssumeBillingRoleWithMFAPolicy

  AllUsers:
    Type: AWS::IAM::Group
    Properties:
      GroupName: AllUsers
      ManagedPolicyArns:
        - !Ref CredentialSelfServicePolicy

Outputs:
  AdministratorsGroup:
    Description: IAM Group for AdministratorsGroup
    Value: !Ref Administrators
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-AdministratorsGroupName"
  AllUsersGroup:
    Description: IAM Group for All Users
    Value: !Ref AllUsers
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-AllUsersGroupName"
  PowerUsersGroup:
    Description: IAM Group for PowerUsers
    Value: !Ref PowerUsers
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-PowerUsersGroupName"
  BillingUsersGroup:
    Description: IAM Group for Billing Users
    Value: !Ref Billing
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-BillingUsersGroupName"
  ReadOnlyUsersGroup:
    Description: IAM Group for ReadOnly Users
    Value: !Ref ReadOnly
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-ReadOnlyUsersGroupName"
