---

AWSTemplateFormatVersion: 2010-09-09

Description: Target account management

Parameters:
  ExternalCloudTrailBucket:
    Type: String
    Description: Name of bucket to write CloudTrail logs to

  ExternalConfigBucket:
    Type: String
    Description: Name of bucket to write Config snapshots to

  EventsSNSNotificationURL:
    Type: String
    Description: URL to deliver CloudWatch Events SNS notifications to

  CloudTrailSNSNotificationURL:
    Type: String
    Description: URL to deliver CloudTrail SNS notifications to

  ConfigSNSNotificationURL:
    Type: String
    Description: URL to deliver Config SNS notifications to

  ManagementAccountID:
    Type: String
    Description: Account ID of management account

  ConfigDeliveryFrequency:
    Type: String
    Description: Interval for Config snapshot delivery and Config Rule evaluation
    Default: Twelve_Hours
    AllowedValues: [One_Hour, Three_Hours, Six_Hours, Twelve_Hours, TwentyFour_Hours]

Conditions:
  IAMRegion: !Equals [ !Ref 'AWS::Region', 'us-east-1' ]
  SupportsCloudWatchEvents:
    'Fn::Not':
      - 'Fn::Or':
          - !Equals [ !Ref 'AWS::Region', 'ca-central-1' ]
          - !Equals [ !Ref 'AWS::Region', 'eu-west-2' ]

Resources:

  ######################
  # Containment policy #
  ######################

  ContainmentPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: IAMRegion
    Properties:
      Path: '/dso/'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Deny
            Action:
              - iam:Detach*
            Resource: '*'
            Condition:
              ArnLike:
                iam:PolicyArn: !Sub 'arn:aws:iam::${AWS::AccountId}:policy/dso/*'
          -
            Effect: Deny
            Action:
              - iam:DeletePolicy
              - iam:DeletePolicyVersion
              - iam:SetDefaultPolicyVersion
            Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:policy/dso/*'
          -
            Effect: Deny
            Action:
              - sts:AssumeRole
              - iam:PassRole
              - iam:DeleteRole
              - iam:PutRolePolicy
              - iam:DeleteRolePolicy
              - iam:AttachRolePolicy
              - iam:DetachRolePolicy
              - iam:UpdateAssumeRolePolicy
            Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/dso/*'
          -
            Effect: Deny
            Action:
              - cloudtrail:DeleteTrail
              - cloudtrail:UpdateTrail
              - cloudtrail:PutEventSelectors
              - cloudtrail:StopLogging
            Resource: !Sub 'arn:aws:cloudtrail:${AWS::Region}:${AWS::AccountId}:trail/${CloudTrail}'
          -
            Effect: Deny
            NotAction:
              - sns:Get*
              - sns:List*
            Resource:
              - !Ref CloudTrailSNSTopic
              - !Ref ConfigSNSTopic
              - !Ref EventsSNSTopic

          # TODO: Config


  ############################
  # Roles for administration #
  ############################

  AdministratorRole:
    Type: AWS::IAM::Role
    Condition: IAMRegion
    Properties:
      RoleName: Administrator
      Path: '/dso/'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
        - !Ref ContainmentPolicy
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${ManagementAccountID}:root'
            Action:
              - sts:AssumeRole

  PowerUserRole:
    Type: AWS::IAM::Role
    Condition: IAMRegion
    Properties:
      RoleName: PowerUser
      Path: '/dso/'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/PowerUserAccess
        - !Ref ContainmentPolicy
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${ManagementAccountID}:root'
            Action:
              - sts:AssumeRole

  ReadOnlyRole:
    Type: AWS::IAM::Role
    Condition: IAMRegion
    Properties:
      RoleName: ReadOnly
      Path: '/dso/'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
        - !Ref ContainmentPolicy
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${ManagementAccountID}:root'
            Action:
              - sts:AssumeRole

  SecurityAuditRole:
    Type: AWS::IAM::Role
    Condition: IAMRegion
    Properties:
      RoleName: SecurityAudit
      Path: '/dso/'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/SecurityAudit
        - !Ref ContainmentPolicy
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${ManagementAccountID}:root'
            Action:
              - sts:AssumeRole

  ##############
  # CloudTrail #
  ##############

  CloudTrailSNSTopic:
    Type: AWS::SNS::Topic
    Condition: IAMRegion
    Properties:
      TopicName: DSOCloudTrail

  CloudTrailSNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Condition: IAMRegion
    Properties:
      PolicyDocument:
        Id: CloudTrailSecurityAuditTopic
        Version: 2012-10-17
        Statement:
          -
            Sid: AllowCloudTrailPublish
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: sns:Publish
            Resource: "*"
      Topics:
        - !Ref CloudTrailSNSTopic

  CloudTrailSNSDelivery:
    Type: AWS::SNS::Subscription
    Condition: IAMRegion
    Properties:
      Endpoint: !Ref CloudTrailSNSNotificationURL
      Protocol: https
      TopicArn: !Ref CloudTrailSNSTopic

  CloudTrail:
    Type: AWS::CloudTrail::Trail
    Condition: IAMRegion
    DependsOn: CloudTrailSNSTopicPolicy
    Properties:
      EnableLogFileValidation: true
      IncludeGlobalServiceEvents: true
      IsLogging: true
      IsMultiRegionTrail: true
      S3BucketName: !Ref ExternalCloudTrailBucket
      SnsTopicName: !GetAtt CloudTrailSNSTopic.TopicName
      Tags:
        - { Key: Environment, Value: DSO }

  ##############
  # AWS Config #
  ##############

  ConfigRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Path: '/dso/'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - s3:PutObject
            Resource:
              - !Sub 'arn:aws:s3:::${ExternalConfigBucket}/AWSLogs/${AWS::AccountId}/Config/*'
            Condition:
              StringLike:
                s3:x-amz-acl: bucket-owner-full-control
          -
            Effect: Allow
            Action:
              - s3:GetBucketAcl
            Resource:
              - !Sub 'arn:aws:s3:::${ExternalConfigBucket}'
          -
            Effect: Allow
            Action:
              - sns:Publish
            Resource: !Ref ConfigSNSTopic

  ConfigRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'ConfigRole_${AWS::Region}'
      Path: '/dso/config/'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSConfigRole
        - !Ref ConfigRolePolicy
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action:
              - sts:AssumeRole

  ConfigSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: DSOConfig

  ConfigSNSDelivery:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref ConfigSNSNotificationURL
      Protocol: https
      TopicArn: !Ref ConfigSNSTopic

  ConfigRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Properties:
      Name: DSOConfigRecorder
      RecordingGroup:
        AllSupported: true
        IncludeGlobalResourceTypes: true
      RoleARN: !GetAtt ConfigRole.Arn

  ConfigDeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    Properties:
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: !Ref ConfigDeliveryFrequency
      Name: DSOConfigDeliveryChannel
      S3BucketName: !Ref ExternalConfigBucket
      SnsTopicARN: !Ref ConfigSNSTopic

  ################
  # Config Rules #
  ################

  # ConfigRuleCloudTrailEnabled:
  #   Type: AWS::Config::ConfigRule
  #   Condition: IAMRegion
  #   Properties:
  #     Source:
  #       Owner: AWS
  #       SourceDetails:
  #         - EventSource: aws.config
  #           MessageType: ConfigurationItemChangeNotification
  #       SourceIdentifier: CLOUD_TRAIL_ENABLED

  # ConfigRuleEBSEncrypted:
  #   Type: AWS::Config::ConfigRule
  #   Properties:
  #     Source:
  #       Owner: AWS
  #       SourceDetails:
  #         - EventSource: aws.config
  #           MessageType: ConfigurationItemChangeNotification
  #       SourceIdentifier: ENCRYPTED_VOLUMES

  # ConfigRuleRootAccountMFA:
  #   Type: AWS::Config::ConfigRule
  #   Condition: IAMRegion
  #   Properties:
  #     Source:
  #       Owner: AWS
  #       SourceDetails:
  #         - EventSource: aws.config
  #           MessageType: ConfigurationItemChangeNotification
  #       SourceIdentifier: ROOT_ACCOUNT_MFA_ENABLED

  #####################
  # CloudWatch Events #
  #####################

  EventsSNSTopic:
    Type: AWS::SNS::Topic
    Condition: SupportsCloudWatchEvents
    Properties:
      TopicName: DSOEvents

  EventsSNSDelivery:
    Type: AWS::SNS::Subscription
    Condition: SupportsCloudWatchEvents
    Properties:
      Endpoint: !Ref EventsSNSNotificationURL
      Protocol: https
      TopicArn: !Ref EventsSNSTopic

  S3ActivityRule:
    Type: AWS::Events::Rule
    Condition: SupportsCloudWatchEvents
    Properties:
      Description: Notify when s3:CreateBucket is called
      EventPattern:
        source: [aws.s3]
        detail-type: ['AWS API Call via CloudTrail']
        detail:
          eventSource: [s3.amazonaws.com]
          eventName: [CreateBucket]
      State: ENABLED
      Targets:
        - Arn: !Ref EventsSNSTopic
          Id: PublishToSNS

  IAMActivityRule:
    Type: AWS::Events::Rule
    Condition: SupportsCloudWatchEvents
    Properties:
      Description: Notify when IAM resources are created or updated
      EventPattern:
        source: [aws.iam]
        detail-type: ['AWS API Call via CloudTrail']
        detail:
          eventSource: [iam.amazonaws.com]
          eventName:
            - CreateUser
            - CreateGroup
            - CreateRole # etc etc etc
      State: ENABLED
      Targets:
        - Arn: !Ref EventsSNSTopic
          Id: PublishToSNS
